/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_devicelists_free(a: number): void;
export function devicelists_new(a: number, b: number, c: number): void;
export function devicelists_isEmpty(a: number): number;
export function devicelists_changed(a: number): number;
export function devicelists_left(a: number): number;
export function __wbg_userid_free(a: number): void;
export function userid_new(a: number, b: number, c: number): void;
export function userid_localpart(a: number, b: number): void;
export function userid_serverName(a: number): number;
export function userid_isHistorical(a: number): number;
export function userid_toString(a: number, b: number): void;
export function __wbg_deviceid_free(a: number): void;
export function deviceid_new(a: number, b: number): number;
export function deviceid_toString(a: number, b: number): void;
export function __wbg_roomid_free(a: number): void;
export function roomid_new(a: number, b: number, c: number): void;
export function roomid_localpart(a: number, b: number): void;
export function roomid_serverName(a: number): number;
export function roomid_toString(a: number, b: number): void;
export function __wbg_servername_free(a: number): void;
export function servername_new(a: number, b: number, c: number): void;
export function servername_host(a: number, b: number): void;
export function servername_port(a: number): number;
export function servername_isIpLiteral(a: number): number;
export function __wbg_olmmachine_free(a: number): void;
export function olmmachine_new(a: number, b: number): number;
export function olmmachine_userId(a: number): number;
export function olmmachine_deviceId(a: number): number;
export function olmmachine_identityKeys(a: number): number;
export function olmmachine_displayName(a: number): number;
export function olmmachine_trackedUsers(a: number): number;
export function olmmachine_updateTrackedUsers(a: number, b: number, c: number): void;
export function olmmachine_receiveSyncChanges(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function olmmachine_outgoingRequests(a: number): number;
export function olmmachine_markRequestAsSent(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function olmmachine_encryptRoomEvent(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void;
export function olmmachine_decryptRoomEvent(a: number, b: number, c: number, d: number, e: number): void;
export function olmmachine_invalidateGroupSession(a: number, b: number): number;
export function olmmachine_shareRoomKey(a: number, b: number, c: number, d: number, e: number): void;
export function olmmachine_getMissingSessions(a: number, b: number, c: number): void;
export function __wbg_ed25519publickey_free(a: number): void;
export function ed25519publickey_length(a: number): number;
export function ed25519publickey_toBase64(a: number, b: number): void;
export function __wbg_curve25519publickey_free(a: number): void;
export function curve25519publickey_length(a: number): number;
export function curve25519publickey_toBase64(a: number, b: number): void;
export function __wbg_identitykeys_free(a: number): void;
export function __wbg_get_identitykeys_ed25519(a: number): number;
export function __wbg_set_identitykeys_ed25519(a: number, b: number): void;
export function __wbg_get_identitykeys_curve25519(a: number): number;
export function __wbg_set_identitykeys_curve25519(a: number, b: number): void;
export function __wbg_encryptionsettings_free(a: number): void;
export function __wbg_get_encryptionsettings_algorithm(a: number): number;
export function __wbg_set_encryptionsettings_algorithm(a: number, b: number): void;
export function __wbg_get_encryptionsettings_rotationPeriod(a: number, b: number): void;
export function __wbg_set_encryptionsettings_rotationPeriod(a: number, b: number, c: number): void;
export function __wbg_get_encryptionsettings_rotationPeriodMessages(a: number, b: number): void;
export function __wbg_set_encryptionsettings_rotationPeriodMessages(a: number, b: number, c: number): void;
export function __wbg_get_encryptionsettings_historyVisibility(a: number): number;
export function __wbg_set_encryptionsettings_historyVisibility(a: number, b: number): void;
export function encryptionsettings_new(): number;
export function __wbg_decryptedroomevent_free(a: number): void;
export function __wbg_get_decryptedroomevent_event(a: number): number;
export function decryptedroomevent_sender(a: number): number;
export function decryptedroomevent_senderDevice(a: number): number;
export function decryptedroomevent_senderCurve25519Key(a: number): number;
export function decryptedroomevent_senderClaimedEd25519Key(a: number): number;
export function decryptedroomevent_forwardingCurve25519KeyChain(a: number): number;
export function decryptedroomevent_verificationState(a: number): number;
export function __wbg_keysuploadrequest_free(a: number): void;
export function __wbg_get_keysuploadrequest_id(a: number): number;
export function __wbg_get_keysuploadrequest_body(a: number): number;
export function keysuploadrequest_new(a: number, b: number): number;
export function keysuploadrequest_type(a: number): number;
export function __wbg_keysqueryrequest_free(a: number): void;
export function __wbg_get_keysqueryrequest_id(a: number): number;
export function __wbg_get_keysqueryrequest_body(a: number): number;
export function keysqueryrequest_new(a: number, b: number): number;
export function keysqueryrequest_type(a: number): number;
export function __wbg_keysclaimrequest_free(a: number): void;
export function __wbg_get_keysclaimrequest_id(a: number): number;
export function __wbg_get_keysclaimrequest_body(a: number): number;
export function keysclaimrequest_new(a: number, b: number): number;
export function keysclaimrequest_type(a: number): number;
export function __wbg_todevicerequest_free(a: number): void;
export function __wbg_get_todevicerequest_id(a: number): number;
export function __wbg_get_todevicerequest_body(a: number): number;
export function todevicerequest_new(a: number, b: number): number;
export function todevicerequest_type(a: number): number;
export function __wbg_signatureuploadrequest_free(a: number): void;
export function __wbg_get_signatureuploadrequest_id(a: number): number;
export function __wbg_get_signatureuploadrequest_body(a: number): number;
export function signatureuploadrequest_new(a: number, b: number): number;
export function signatureuploadrequest_type(a: number): number;
export function __wbg_roommessagerequest_free(a: number): void;
export function __wbg_get_roommessagerequest_id(a: number): number;
export function __wbg_get_roommessagerequest_body(a: number): number;
export function roommessagerequest_new(a: number, b: number): number;
export function roommessagerequest_type(a: number): number;
export function __wbg_keysbackuprequest_free(a: number): void;
export function __wbg_get_keysbackuprequest_id(a: number): number;
export function __wbg_get_keysbackuprequest_body(a: number): number;
export function keysbackuprequest_new(a: number, b: number): number;
export function keysbackuprequest_type(a: number): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7c68bc601282a844(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__he9a9b53529379e5e(a: number, b: number, c: number, d: number): void;
export function __wbindgen_free(a: number, b: number): void;
